apply plugin: 'java'

defaultTasks 'clean', 'check'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
}

configurations.configureEach {
  resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

repositories {
  mavenCentral()
  mavenLocal()
  maven {
    url uri('https://oss.sonatype.org/content/repositories/snapshots/')
    mavenContent {
      snapshotsOnly()
    }
  }
}

compileJava {
  options.debugOptions.debugLevel = "source,lines,vars"
  options.fork = true
  options.compilerArgs << '-parameters'
}

sourceSets {
  main {
    java {srcDir "app"}
    resources {srcDirs "conf", "app"}
  }
  test {
    java {srcDir "test"}
    resources {srcDir "test"}
  }
}

buildscript {
  ext.replay_version = '2.3.1'
  ext.httpclient_version = '4.5.14'
  ext.junitVersion = '5.13.2'
}

dependencies {
  implementation("com.codeborne.replay:framework:${replay_version}")
  implementation("com.codeborne.replay:fastergt:${replay_version}")
  implementation("com.codeborne.replay:guice:${replay_version}")
  implementation("com.codeborne.replay:pdf:${replay_version}")
  implementation("com.codeborne.replay:javanet:${replay_version}")
  implementation("org.apache.httpcomponents:httpclient:${httpclient_version}")
  implementation("org.apache.httpcomponents:fluent-hc:${httpclient_version}")

  testImplementation('org.assertj:assertj-core:3.27.3')
  testImplementation('com.codeborne:selenide:7.9.3')
  testImplementation platform("org.junit:junit-bom:$junitVersion")
  testImplementation("org.junit.jupiter:junit-jupiter")
  testImplementation "org.junit.platform:junit-platform-engine"
  testImplementation "org.junit.platform:junit-platform-launcher"

  testImplementation('org.mockito:mockito-core:5.18.0')
  testImplementation('org.subethamail:subethasmtp:3.1.7') {transitive = false}
  testImplementation('org.wiremock:wiremock:3.13.1') {
    exclude group: 'org.eclipse.jetty', module: 'jetty-client'
  }
  testImplementation('com.fasterxml.jackson.core:jackson-databind:2.19.1')
  testImplementation('com.codeborne:pdf-test:1.9.2')
}

test {
  exclude 'ui/**'
}

tasks.register('uitest', Test) {
  include 'ui/**/*'
  systemProperties['selenide.headless'] = 'true'
}

tasks.withType(Test).configureEach {
  useJUnitPlatform()
  systemProperties['file.encoding'] = "UTF-8"
  systemProperties['user.country'] = 'TR'
  systemProperties['user.language'] = 'tr'
  testLogging {
    events "passed", "skipped", "failed"
    showExceptions true
    exceptionFormat 'full'
  }
  outputs.upToDateWhen { false }
}

tasks.withType(JavaCompile).configureEach {
  options.encoding = 'UTF-8'
}
