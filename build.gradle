apply plugin: 'java'

defaultTasks 'clean', 'check'

tasks.register('cleanLibs', Delete) {
  delete 'build/lib', 'build/lib-test'
}

tasks.register('libsProd', Sync) {
  from configurations.compileClasspath
  from configurations.runtimeClasspath
  into "build/lib"
}

tasks.register('libsTest', Sync) {
  from configurations.testRuntimeClasspath - configurations.compileClasspath - configurations.runtimeClasspath
  into "build/lib-test"
}

tasks.register('deps') {}
compileJava.dependsOn deps
deps.dependsOn(['cleanLibs', 'libsProd', 'libsTest'])

configurations.configureEach {
  resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

repositories {
  mavenCentral()
  mavenLocal()
}

compileJava {
  options.debugOptions.debugLevel = "source,lines,vars"
  options.fork = true
  options.compilerArgs << '-parameters'
}

sourceSets {
  main {
    java {srcDir "app"}
    resources {srcDirs "conf", "app"}
  }
  test {
    java {srcDir "test"}
    resources {srcDir "test"}
  }
}

buildscript {
  ext.replay_version = '1.12.0'
  ext.httpclient_version = '4.5.14'
}

dependencies {
  implementation("com.codeborne.replay:framework:${replay_version}")
  implementation("com.codeborne.replay:fastergt:${replay_version}")
  implementation("com.codeborne.replay:guice:${replay_version}")
  implementation("com.codeborne.replay:pdf:${replay_version}")
  implementation("org.apache.httpcomponents:httpclient:${httpclient_version}")
  implementation("org.apache.httpcomponents:fluent-hc:${httpclient_version}")

  testImplementation('org.assertj:assertj-core:3.24.1')
  testImplementation('com.codeborne:selenide:6.11.0')
  testImplementation('junit:junit:4.13.2')
  testImplementation('org.mockito:mockito-core:4.11.0')
  testImplementation('org.subethamail:subethasmtp:3.1.7') {transitive = false}
  testImplementation('com.github.tomakehurst:wiremock:3.0.1') {
    exclude group: 'net.minidev'
    exclude group: 'org.eclipse.jetty', module: 'jetty-client'
  }
  testImplementation('com.fasterxml.jackson.core:jackson-databind:2.14.1')
  testImplementation('com.codeborne:pdf-test:1.8.0')
}

test {
  exclude 'ui/**'
}

tasks.register('uitest', Test) {
  include 'ui/**/*'
  systemProperties['BUILD_URL'] = System.getenv()['BUILD_URL']
  systemProperties['selenide.headless'] = 'true'
}

tasks.withType(Test).configureEach {
  systemProperty "file.encoding", "UTF-8"
  testLogging { exceptionFormat = 'full' }
  outputs.upToDateWhen { false }
}

tasks.withType(JavaCompile).configureEach {
  options.encoding = 'UTF-8'
}