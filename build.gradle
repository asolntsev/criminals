apply plugin: 'java'

defaultTasks 'clean', 'check'

task cleanLibs(type: Delete) {
  delete 'build/lib', 'build/lib-test'
}

task libsProd(type: Sync) {
  from configurations.compileClasspath
  from configurations.runtimeClasspath
  into "build/lib"
}

task libsTest(type: Sync) {
  from configurations.testRuntimeClasspath - configurations.compileClasspath - configurations.runtimeClasspath
  into "build/lib-test"
}

task deps {}
compileJava.dependsOn deps
deps.dependsOn(['cleanLibs', 'libsProd', 'libsTest'])

repositories {
  mavenCentral()
  //mavenLocal()
}

compileJava {
  options.debugOptions.debugLevel = "source,lines,vars"
  options.fork = true
  options.compilerArgs << '-parameters'
  options.encoding = 'UTF-8'
}

sourceSets {
  main {
    java {srcDir "app"}
    resources {srcDirs "conf", "app"}
  }
  test {
    java {srcDir "test"}
    resources {srcDir "test"}
  }
}

buildscript {
  ext.replay_version = '1.9.2'
  ext.httpclient_version = '4.5.13'
}

dependencies {
  implementation("com.codeborne.replay:framework:${replay_version}")
  implementation("com.codeborne.replay:fastergt:${replay_version}")
  implementation("com.codeborne.replay:guice:${replay_version}")
  implementation("com.codeborne.replay:pdf:${replay_version}")
  implementation("org.apache.httpcomponents:httpclient:${httpclient_version}")
  implementation("org.apache.httpcomponents:fluent-hc:${httpclient_version}")

  testImplementation('org.assertj:assertj-core:3.22.0')
  testImplementation('com.codeborne:selenide:6.2.1')
  testImplementation('junit:junit:4.13.2')
  testImplementation('org.mockito:mockito-core:4.3.0')
  testImplementation('org.subethamail:subethasmtp:3.1.7') {transitive = false}
  testImplementation('com.github.tomakehurst:wiremock:2.27.2')
  testImplementation "com.codeborne:pdf-test:1.7.0"
}

test {
  exclude 'ui/**'
}

task uitest(type: Test) {
  include 'ui/**/*'
  systemProperties['BUILD_URL'] = System.getenv()['BUILD_URL']
  systemProperties['selenide.headless'] = 'true'
}

tasks.withType(Test).all { testTask ->
  testTask.systemProperties['file.encoding'] = 'UTF-8'
  testTask.testLogging {exceptionFormat = 'full'}
  testTask.outputs.upToDateWhen {false}
}

